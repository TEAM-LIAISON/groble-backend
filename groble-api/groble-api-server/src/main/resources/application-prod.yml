spring:
  profiles:
    group:
      blue: blue, common, secret-prod
      green: green, common, secret-prod

server:
  env: blue

---

spring:
  config:
    activate:
      on-profile: blue

server:
  port: 8080
  address: 0.0.0.0
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

---

spring:
  config:
    activate:
      on-profile: green

server:
  port: 8080
  address: 0.0.0.0
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

---

spring:
  config:
    activate:
      on-profile: common

  application:
    name: groble
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    validate-on-migrate: true
    clean-disabled: true
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: false
        show_sql: false
        use_sql_comments: false
        default_batch_fetch_size: 100
        generate_statistics: false   # 성능 모니터링 설정
        jdbc:
          batch_size: 50
          time_zone: Asia/Seoul
        order_inserts: true
        order_updates: true
    hibernate:
      ddl-auto: create
  mvc:
    path match:
      matching-strategy: ant_path_matcher

  servlet:
    multipart:
      enabled: true # 멀티파트 업로드 지원 여부
      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
      max-file-size: 60MB # 한 개 파일의 최대 사이즈
      max-request-size: 60MB # 한 개 요청의 최대 사이즈

storage:
  provider: s3
  s3:
    bucket: image.groble.im

app:
  jwt:
    access-token:
      secret: 6M1boNRsyYPgKuR197f4w2uuh8DXfYyjxgPJKmINtHo=
      expiration-ms: 3600000 # 1 hour
    refresh-token:
      secret: bZvf0E0wsJXugzxv2m25c5zHvJrNfvsQIjzU6eBScbk=
      expiration-ms: 604800000 # 1 hour
    issuer: groble-auth-service
  frontend-url: https://groble.im
  backend-url: https://api.groble.im
  cookie:
    domain: groble.im
    admin-domain: groble.im
  reset:
    base-url: https://groble.im
    path: /reset-password
    expiration-ms: 200000 # 2 minutes

# Springdoc OpenAPI Configuration
springdoc:
  swagger-ui:
    path: /swagger-ui
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
    disable-swagger-default-url: true
  api-docs:
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/**
  packages-to-scan:
    - liaison.groble.api.server
  show-actuator: false
  model-and-view-allowed: true

logging:
  level:
    root: INFO
    com.yourcompany.groble: INFO  # Set your application package
    org.springdoc: INFO
    io.swagger.v3: INFO
    # These are the critical ones causing problems
    org.apache.http: WARN         # Set HTTP client to WARN level
    org.apache.http.wire: WARN    # Specifically disable wire logging
    com.amazonaws: INFO           # Control AWS SDK logging

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
    metrics:
      export:
        prometheus:
          enabled: true
      distribution:
        percentiles-histogram:
          http.server.requests: true
      tags:
        application: ${spring.application.name}
        environment: ${server.env}
    observations:
      key-values:
        application: ${spring.application.name}
