openapi: 3.0.3
info:
  title: Groble Order API
  version: 1.0.0
  description: 주문 관련 API 명세

servers:
  - url: http://localhost:8080
    description: 로컬 개발 서버
  - url: https://api.groble.com
    description: 운영 서버

paths:
  /api/v1/orders:
    get:
      tags:
        - Order
      summary: 주문 목록 조회
      operationId: getOrders
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

  /api/v1/orders/{orderId}:
    get:
      tags:
        - Order
      summary: 주문 상세 조회
      operationId: getOrderDetail
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailResponse'
        '404':
          description: 주문을 찾을 수 없음

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    OrderListResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    OrderDetailResponse:
      allOf:
        - $ref: '#/components/schemas/OrderSummary'
        - type: object
          properties:
            orderItems:
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'
            shippingAddress:
              $ref: '#/components/schemas/Address'
            paymentInfo:
              $ref: '#/components/schemas/PaymentInfo'

    OrderSummary:
      type: object
      required:
        - orderId
        - orderNumber
        - status
        - totalAmount
        - createdAt
      properties:
        orderId:
          type: integer
          format: int64
        orderNumber:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        totalAmount:
          type: integer
          description: 총 주문 금액 (원)
        createdAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        itemName:
          type: string
        quantity:
          type: integer
        unitPrice:
          type: integer
        totalPrice:
          type: integer

    OrderStatus:
      type: string
      enum:
        - PENDING
        - CONFIRMED
        - PREPARING
        - SHIPPED
        - DELIVERED
        - CANCELLED

    Address:
      type: object
      properties:
        zipCode:
          type: string
        address:
          type: string
        detailAddress:
          type: string

    PaymentInfo:
      type: object
      properties:
        paymentMethod:
          type: string
        paymentStatus:
          type: string
        paidAmount:
          type: integer
        paidAt:
          type: string
          format: date-time

    PaginationInfo:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalElements:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
